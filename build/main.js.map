{"version":3,"sources":["../../src/pages/historical/historical.ts","../../src/objects/real-time.ts","../../src/pages/home/home.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/stop-list/stop-list.ts","../../src/pages/historical-form/historical-form.ts","../../src/pages/paths-list/paths-list.ts","../../src/utils/headers.ts","../../src/providers/login.ts","../../src/pages/groups-page/groups-page.ts","../../src/pages/mileage/mileage.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/global.config.ts","../../src/providers/data-management.service.ts","../../src/utils/map.service.ts","../../src/providers/historical.service.ts","../../src/providers/real-time.service.ts","../../src/pages/poi/poi.ts","../../src/utils/geocoding.service.ts","../../src/objects/data-management.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Mileage } from './../../objects/real-time';\r\nimport { StopList } from './../stop-list/stop-list';\r\nimport { PointInterest, Driver } from './../../objects/data-management';\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ModalController,AlertController, LoadingController, App, ToastController,ViewController,ActionSheetController,FabContainer } from 'ionic-angular';\r\nimport { DatePipe,DecimalPipe } from '@angular/common';\r\nimport { MapService } from \"../../utils/map.service\";\r\nimport { HistoricalService } from \"../../providers/historical.service\";\r\nimport { DataManagementService } from \"../../providers/data-management.service\";\r\nimport { HistoricalForm } from '../historical-form/historical-form';\r\nimport { PathsList } from '../paths-list/paths-list';\r\nimport { Subscription } from \"rxjs\";\r\nimport { imagesDir,time_difference } from \"../../providers/global.config\";\r\nimport { GeocodingService } from '../../utils/geocoding.service';\r\n\r\n import Polygon = L.Polygon;\r\n import Marker = L.Marker;\r\n import Icon = L.Icon;\r\nimport 'leaflet';\r\nimport { RealTimeService } from '../../providers/real-time.service';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport {HomePage} from '../home/home';\r\nimport { GroupsPage } from '../groups-page/groups-page';\r\nimport { RealTimeRecord, Group, Vehicule } from \"../../objects/real-time\";\r\nimport {Poi} from '../poi/poi';\r\nimport { CallNumber } from '@ionic-native/call-number';\r\nimport { Storage } from '@ionic/storage';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport {Stop} from '../../objects/real-time';\r\nimport { MileageComponent } from '../mileage/mileage';\r\ndeclare function require(name:string);\r\nvar Routing: any = require('leaflet-routing-machine');\r\n\r\n@Component({\r\n  selector: 'page-historical',\r\n  templateUrl: 'historical.html',\r\n})\r\n\r\nexport class Historical {\r\n  realtimecoord:any;\r\n  mileageClicked:Mileage;\r\n  stopClicked: Stop;\r\n  pois: Poi[];\r\n  stops: Stop[] = [];\r\n  firstDate:any;\r\n  lastDate:any;\r\n  selectedDeviceId: any;\r\n  pointInterests: PointInterest[] = null;\r\n  groups: Group[];\r\n  allRealTimeRecords: Subscription;\r\n  allGroups: Subscription;\r\n  allPaths: Subscription;\r\n  paths: any[];\r\n  loader: any;\r\n  selectedDevice : any;\r\n  searchWord: string = '';\r\n  newRealTimeRecords: RealTimeRecord[] = null;\r\n  oldRealTimeRecords: RealTimeRecord[] = null;\r\n  angles: Map<number, number> = new Map();\r\n  isCurrentPathClicked: boolean = false;\r\n  pathDrawn: boolean = false;\r\n  previousPathdrawn: boolean = false;\r\n  pathDraw:boolean=false;\r\n  currentPathClickedDeviceIds: number[] = null;\r\n  modalopen:boolean=false;\r\n  dismissbutton:boolean=false;\r\n  driverphone:string;\r\n  poisInMap:boolean=false;\r\n  itineaire:boolean=false;\r\n  latpoi:any;\r\n  lngpoi:any;\r\n  addresspoi:any;\r\n  username : string;\r\n  currentlocationlat:any;\r\n  currentlocationlng:any;\r\n  coords:any;\r\n  ajoutpoi:boolean=false;\r\n  mapchoice:boolean=true;\r\n  DeviceId:any;\r\n  mapclicked:boolean=false;\r\n  resultopened:boolean=false;\r\n  openStopResult:boolean=false;\r\n  openMileageResult:boolean=false;\r\n  AllPaths:any;\r\n  mileages: Mileage[] = [];\r\n  totalMileage: Mileage;  \r\n  pathpoirealtime:boolean=false;\r\n  control:any;\r\n  constructor(private alertCtrl: AlertController, private geolocation: Geolocation,public actionSheetCtrl: ActionSheetController, public viewCtrl: ViewController,private callNumber: CallNumber,private storage : Storage,private pipe: DecimalPipe,public toastController:ToastController, private realTimeService: RealTimeService, private geocodingService: GeocodingService,private dataManagementService: DataManagementService,public _app: App , private historicalService: HistoricalService, public loadingCtrl: LoadingController, public modalCtrl: ModalController, public navCtrl: NavController, public navParams: NavParams, public mapService: MapService) {\r\n    this.navCtrl.swipeBackEnabled = false;\r\n    this.totalMileage = new Mileage();\r\n  }\r\n  \r\n  // initialisation du map + get current coordinate user\r\n  ngOnInit() {\r\n    this.initMap();\r\n    this.init();\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n      this.currentlocationlat=resp.coords.latitude;\r\n      this.currentlocationlng=resp.coords.longitude;\r\n      this.coords=resp.coords;\r\n    \r\n    \r\n    \r\n     }).catch((error) => {\r\n       console.log('Error getting location', error);\r\n     });\r\n     \r\n  } \r\n \r\n  //Disable swipe back\r\n  ionViewWillEnter() { \r\n    this.navCtrl.swipeBackEnabled = false;\r\n  } \r\n  //Loading groups and all real time records\r\n  init() {\r\n    this.mapService.removeAllRtMarkers();\r\n    this.loadGroups();\r\n    Observable.interval(1000 * 60).subscribe(x => {\r\n      this.getAllRealTimeRecords();\r\n    });\r\n  }\r\n  //get all groups methods\r\n  loadGroups() {\r\n    \r\n    this.allGroups = this.realTimeService.getAllGroups(this.searchWord).subscribe(groupes => {\r\n      this.groups = groupes;\r\n      this.openGroupsModal();\r\n      this.groups.forEach(group => {\r\n        group.vehicules.forEach(vehicule => {\r\n          vehicule.realTimeRecord = new RealTimeRecord();\r\n          this.getAllRealTimeRecords();\r\n        })\r\n      });\r\n    });\r\n  \r\n  }\r\n  // All records real time method\r\n  getAllRealTimeRecords() {\r\n    this.allRealTimeRecords = this.realTimeService.getAllRealTimeRecords().subscribe(realTimeRecords => {\r\n      if (this.newRealTimeRecords) {\r\n        this.oldRealTimeRecords = this.newRealTimeRecords;\r\n      }\r\n      this.newRealTimeRecords = realTimeRecords;\r\n      realTimeRecords.forEach(realTimeRecord => {\r\n        realTimeRecord.vehicule = this.getVehicule(realTimeRecord.idRealTimeRecord);\r\n        this.trackRealTimeRecord(realTimeRecord);\r\n        if (this.oldRealTimeRecords) {\r\n          this.oldRealTimeRecords.map(oldRealTimeRecord => {\r\n            if (oldRealTimeRecord.idRealTimeRecord === realTimeRecord.idRealTimeRecord) {\r\n              if (realTimeRecord.speed > 0 && this.previousPathdrawn == false && realTimeRecord.idRealTimeRecord == this.selectedDevice) {\r\n                this.displayCurrentPath(realTimeRecord.idRealTimeRecord);\r\n              }\r\n              if (oldRealTimeRecord.speed == 0 && realTimeRecord.speed > 0) {\r\n                this.isCurrentPathClicked = true;\r\n                if(this.currentPathClickedDeviceIds != null)\r\n                this.currentPathClickedDeviceIds.push(realTimeRecord.idRealTimeRecord);\r\n                if(this.previousPathdrawn == false && realTimeRecord.idRealTimeRecord == this.selectedDevice){\r\n                  this.displayCurrentPath(realTimeRecord.idRealTimeRecord);\r\n                }\r\n              }\r\n              if ((oldRealTimeRecord.speed > 0 && realTimeRecord.speed == 0) && realTimeRecord.ignition == false) {\r\n\r\n                this.isCurrentPathClicked = false;\r\n                this.currentPathClickedDeviceIds = null;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n  //initialisation du map\r\n  initMap() {\r\n    \r\n    if (this.mapService.map) this.mapService.map.remove();\r\n    let map = L.map('historicalMap', {\r\n      zoomControl: false,\r\n      center: L.latLng(32.586163,-9.912118),\r\n      zoom: 6,\r\n      minZoom: 3,\r\n      maxZoom: 20,\r\n      maxNativeZoom: 17,\r\n      layers: [this.mapService.baseMaps.googlehybride]\r\n    });\r\n    L.control.layers(this.mapService.baseMaps,null,{position:'bottomright'}).addTo(map);\r\n    L.control.zoom({ position: 'topright' }).addTo(map);\r\n    this.mapService.map = map;\r\n    // if(this.ajoutpoi){\r\n      \r\n    // // map.on('click', onMapClick);\r\n    // // this.mapclicked=true;\r\n    // }            \r\n    // var tempMarker;\r\n    // // function onMapClick(e) {\r\n     \r\n    //    var clickPosition = e.latlang;\r\n    //     var tempMarker = L.marker(e.latlng)\r\n    //     .on('click', (e)=>{this.onMapClick(e)})\r\n    //    .addTo(map);\r\n    //    console.log(e.latlng.lng, e.latlng.lat);\r\n    //   }\r\n    // \r\n  \r\n    //    L.Routing.control({\r\n    //     waypoints: [\r\n    //       L.latLng(47.569198, 7.5874886),\r\n    //        L.latLng(47.5685418, 7.5886755)\r\n    //      ]\r\n    //    }).addTo(map);\r\n    //   }\r\n    // if(this.test=true){\r\n    // L.Routing.control({\r\n    //   waypoints: [\r\n    //     L.latLng(this.currentlocationlat,this.currentlocationlng),\r\n    //      L.latLng(this.latpoi,this.lngpoi)\r\n    //    ]\r\n    //  }).addTo(this.mapService.map);\r\n    // }\r\n    }\r\n   \r\n    //draw itineraire\r\n   drawpath(){\r\n     \r\n      \r\n    \r\n      if(this.itineaire){\r\n        this.itineaire=false;\r\n        this.initMap();\r\n        this.goToRealTimeRecord(this.selectedDevice);\r\n        return;\r\n        \r\n      }else{\r\n        var L = require('leaflet')\r\n        if (this.mapService.map) this.mapService.map.remove();\r\n        let map = L.map('historicalMap', {\r\n          zoomControl: false,\r\n          center: L.latLng(32.586163,-9.912118),\r\n          zoom: 6,\r\n          minZoom: 3,\r\n          maxZoom: 20,\r\n          maxNativeZoom: 17,\r\n          layers: [this.mapService.baseMaps.googlehybride]\r\n        });\r\n        L.control.layers(this.mapService.baseMaps,null,{position:'bottomright'}).addTo(map);\r\n        L.control.zoom({ position: 'topright' }).addTo(map);\r\n        this.mapService.map = map;\r\n        this.control=L.Routing.control({\r\n        waypoints: [\r\n          L.latLng(this.currentlocationlat,this.currentlocationlng),\r\n           L.latLng(this.latpoi,this.lngpoi)\r\n         ],\r\n        \r\n       }).addTo(this.mapService.map);\r\n        this.itineaire=true;\r\n       \r\n      \r\n      }\r\n       \r\n    }\r\n    ajouterPoi(){\r\n     \r\n      this.ajoutpoi=true;\r\n      if (this.mapService.map) this.mapService.map.remove();\r\n      let map = L.map('historicalMap', {\r\n        zoomControl: false,\r\n        center: L.latLng(this.latpoi,this.lngpoi),\r\n        zoom: 6,\r\n        minZoom: 3,\r\n        maxZoom: 20,\r\n        maxNativeZoom: 17,\r\n        layers: [this.mapService.baseMaps.googlehybride]\r\n      });\r\n      L.control.zoom({ position: 'topright' }).addTo(map);\r\n      this.mapService.map = map;\r\n      if(this.mapclicked==false){\r\n        \r\n      map.on('click', onMapClick);\r\n      \r\n      }            \r\n      var tempMarker;\r\n      function onMapClick(e) {\r\n        var clickPosition = e.latlang;\r\n          var tempMarker = L.marker(e.latlng)\r\n          .on('click', (e)=>{this.onMapClick(e)})\r\n        .addTo(map);\r\n        this.mapclicked=true;\r\n      }if(this.mapclicked){\r\n      this.openPoiModal();\r\n      }\r\n    }\r\n  // (open modal) liste des groupes et véhicules (temps réel) \r\n  openGroupsModal() {\r\n    this.itineaire=false;\r\n    this.pathpoirealtime=true;\r\n    this.initMap();\r\n    this.resultopened=false;\r\n    this.openStopResult=false;\r\n    this.openMileageResult=false;\r\n    let groupModal = this.modalCtrl.create(GroupsPage, { groups: this.groups });\r\n    groupModal.present();\r\n    groupModal.onDidDismiss(selectedDevice => {\r\n      if (selectedDevice != null && selectedDevice != 0 ) {\r\n        this.mapService.removeAllRtMarkers();\r\n        this.clearPolylines();\r\n        this.selectedDevice = selectedDevice;\r\n        this.goToRealTimeRecord(selectedDevice);\r\n      }\r\n    });\r\n    this.modalopen=false;\r\n    this.dismissbutton=true;\r\n    this.DeviceId=null;\r\n  }\r\n  //open POI Modal\r\n  openPoiModal(){\r\n   \r\n    let pointInterest= new PointInterest();\r\n    pointInterest.address=this.addresspoi;\r\n    pointInterest.coordinate.lat=this.latpoi;\r\n    pointInterest.coordinate.lng=this.lngpoi;\r\n    let PoiModal = this.modalCtrl.create(Poi,{pointInterest});\r\n    PoiModal.present();\r\n    PoiModal.onDidDismiss(form => {\r\n      if(form.pointinterest.name!=null){\r\n        this.dataManagementService.addPointInterest(form.pointinterest).subscribe(pointInterest => {\r\n          if (pointInterest.type == \"MARKER\") {\r\n            let circle = L.circle(pointInterest.coordinate, {\r\n              color: 'red',\r\n              fillColor: '#f03',\r\n              fillOpacity: 0.1,\r\n              radius: pointInterest.ray\r\n            });\r\n            this.mapService.addCircle(circle);\r\n            setTimeout(()=> {\r\n                this.mapService.removeCirclesFromMap();\r\n            }, 3000);\r\n          }\r\n          this.dataManagementService.pointInterests.push(pointInterest);\r\n        }, (err) => {\r\n        });\r\n      }\r\n    });\r\n  }\r\n /* removecurrentpath(){\r\n  if(this.control){\r\n    this.mapService.map.removeControl(this.control);      \r\n    }\r\n  }*/\r\n  //remove polylines and markers from map\r\n  clearPolylines(){\r\n   /* this.removecurrentpath();*/\r\n    this.mapService.removePolylinesFromMap();\r\n    this.mapService.removeMarkersFromMap();\r\n    this.pathDrawn = false;\r\n  }\r\n\r\n  //Getting old real time record\r\n  getOldRealTimeRecord(id: number): RealTimeRecord {\r\n    let result = this.oldRealTimeRecords.filter(rt => {\r\n      return rt.idRealTimeRecord == id;\r\n    });\r\n    if (result) return result[0];\r\n    else return null;\r\n  }\r\n\r\n  //go to real time and gets historique records\r\n  goToRealTimeRecord(idRealTimeRecord: number) {\r\n    this.newRealTimeRecords.forEach(realTimeRecord => {\r\n      if (realTimeRecord.idRealTimeRecord == idRealTimeRecord) {\r\n        //this.clearPolylines();\r\n        this.mapService.map.setView(realTimeRecord.coordinate, 15);\r\n        this.trackRealTimeRecord(realTimeRecord);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Compare two coordinate\r\n  compareTwoCoordinate(p1, p2) {\r\n    if (p1.lat == p2.lat && p1.lng == p2.lng) return true;\r\n    else false;\r\n  }\r\n\r\n  //\r\n  getGeocoding(address: any): string {\r\n    let geocoding: string = null;\r\n    if (address) {\r\n      if (address.road != null) {\r\n        geocoding = address.road;\r\n      }\r\n      if (address.neighbourhood != null) {\r\n        geocoding = geocoding ? geocoding + ' ' + address.neighbourhood : address.neighbourhood;\r\n      }\r\n      if (address.city != null) {\r\n        geocoding = geocoding ? geocoding + ' (' + address.city + ')' : address.city;\r\n      }\r\n      if (geocoding == null) {\r\n        geocoding = 'chargement..';\r\n      }\r\n    }\r\n    return geocoding;\r\n  }\r\n\r\n  // get vehicule\r\n  getVehicule(idDevice: number): Vehicule {\r\n    let foundVehicule = new Vehicule();\r\n    for (let i = 0; i < this.groups.length; i++) {\r\n      for (let j = 0; j < this.groups[i].vehicules.length; j++) {\r\n        if (this.groups[i].vehicules[j].idDevice == idDevice) {\r\n          foundVehicule = this.groups[i].vehicules[j];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return foundVehicule;\r\n  }\r\n\r\n  //temps reel \r\n  trackRealTimeRecord(realTimeRecord: RealTimeRecord) {\r\n    let angle = 0;\r\n    var date = new Date(realTimeRecord.recordTime);\r\n    realTimeRecord.recordTime=new Date(new Date(realTimeRecord.recordTime).setHours(new Date(realTimeRecord.recordTime).getHours()-1));\r\n    var minutes = date.getMinutes() + \"\";\r\n    if (minutes.length == 1) {\r\n      minutes = \"0\" + date.getMinutes();\r\n    }\r\n    let icon;\r\n    let marker;\r\n    let popup;\r\n    if (!this.dataManagementService.pointInterests) {\r\n      this.dataManagementService.getAllPointInterests().subscribe(pointInterests => {\r\n        this.dataManagementService.pointInterests = pointInterests;\r\n        realTimeRecord.relativePosition = this.dataManagementService.getRelativePosition(realTimeRecord.coordinate.lat, realTimeRecord.coordinate.lng);\r\n      })\r\n    }\r\n    else {\r\n      realTimeRecord.relativePosition = this.dataManagementService.getRelativePosition(realTimeRecord.coordinate.lat, realTimeRecord.coordinate.lng);\r\n    }\r\n    if (realTimeRecord.type === \"AA\") {\r\n      angle = realTimeRecord.rotationAngle * 8;\r\n    }\r\n    if (this.oldRealTimeRecords && realTimeRecord.type === \"GPRMC\") {\r\n      let oldRealTimeRecord = this.getOldRealTimeRecord(realTimeRecord.idRealTimeRecord);\r\n      if (oldRealTimeRecord) {\r\n        if (!this.compareTwoCoordinate(oldRealTimeRecord.coordinate, realTimeRecord.coordinate)) {\r\n          angle = Math.atan2(realTimeRecord.coordinate.lng - oldRealTimeRecord.coordinate.lng, realTimeRecord.coordinate.lat - oldRealTimeRecord.coordinate.lat) * 180 / Math.PI;\r\n          this.angles.set(realTimeRecord.idRealTimeRecord, angle);\r\n        } else {\r\n          angle = this.angles.get(realTimeRecord.idRealTimeRecord);\r\n        }\r\n      }\r\n    }\r\n    popup = '<b>Chauffeur:</b> ' + this.dataManagementService.getDriverName(realTimeRecord.vehicule.driver) +\r\n    '<br><b>Matricule:</b> ' + realTimeRecord.vehicule.matricule +\r\n    '<br><b>Mark:</b> ' + realTimeRecord.vehicule.mark +\r\n    '<br><b>Lat,Lng:</b><i> [' + this.PipeLngLat(realTimeRecord.coordinate.lat) + ',' + this.PipeLngLat(realTimeRecord.coordinate.lng) + ']</i><br><b>Vitesse :</b>' + realTimeRecord.speed +\r\n    \"<br><b>date et l'heure:</b> \" + (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() + ' ' + date.getHours() + ':' + minutes +\r\n    \"<br><b>Signal GSM:</b> \" + realTimeRecord.signal +\r\n    \" <i class='fa fa-wifi' aria-hidden='true'></i><br><b>Sat en vue:</b> \" + realTimeRecord.satInView + \" <i class='fa fa-globe' aria-hidden='true'></i>\";\r\n    this.realtimecoord=realTimeRecord.coordinate;\r\n \r\n    this.latpoi=this.PipeLngLat(realTimeRecord.coordinate.lat);\r\n    this.lngpoi=this.PipeLngLat(realTimeRecord.coordinate.lng);\r\n    this.dataManagementService.inverseGeoconding(this.latpoi,this.lngpoi,17).subscribe(res => {\r\n      this.addresspoi=res.display_name;\r\n    }, (err) => {        \r\n    });\r\n\r\n    if(realTimeRecord.vehicule.driver){\r\n      this.driverphone=realTimeRecord.vehicule.driver.telephone;\r\n    }\r\n\r\n    marker = new Marker(realTimeRecord.coordinate, {\r\n      rotationAngle: angle\r\n    });\r\n\r\n    let imageUri:string = \"http://37.187.171.84/images/c1x0.png\";\r\n    if (realTimeRecord.realTimeRecordStatus == 'VALID' && realTimeRecord.speed == 0 && realTimeRecord.ignition== true) {\r\n      icon = new Icon({\r\n        iconUrl: imagesDir + \"c4x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\",\r\n        iconAnchor: [-2, 30],\r\n        popupAnchor: [10, -10]\r\n      });\r\n      imageUri = imagesDir + \"c4x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\";\r\n    }\r\n    if (realTimeRecord.realTimeRecordStatus == 'VALID' && realTimeRecord.speed > 0 ) {\r\n      icon = new Icon({\r\n        iconUrl: imagesDir + \"c1x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\",\r\n        iconAnchor: [-2, 30],\r\n        popupAnchor: [10, -25]\r\n      });\r\n      imageUri = imagesDir + \"c1x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\";\r\n    }\r\n    if (realTimeRecord.realTimeRecordStatus == 'VALID' && realTimeRecord.speed == 0 && realTimeRecord.ignition== false) {\r\n      icon = new Icon({\r\n        iconUrl: imagesDir + \"c2x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\",\r\n        iconAnchor: [-2, 30],\r\n        popupAnchor: [10, -25]\r\n      });\r\n      imageUri = imagesDir + \"c2x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\";\r\n    }\r\n    if (realTimeRecord.realTimeRecordStatus == 'NON_VALID' || realTimeRecord.realTimeRecordStatus == 'TECHNICAL_ISSUE') {\r\n      icon = new Icon({\r\n        iconUrl: imagesDir + \"c3x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\",\r\n        iconAnchor: [-2, 30],\r\n        popupAnchor: [10, -25]\r\n      });\r\n      imageUri = imagesDir + \"c3x\" + Math.abs(Math.round(angle / 45) * 45) + \".png\";\r\n    }\r\n    realTimeRecord.icon = imageUri;\r\n    this.geocodingService.inverseGeoconding(realTimeRecord.coordinate.lat, realTimeRecord.coordinate.lng, 18).subscribe(adress => {\r\n      popup = popup + '<hr><b>' + adress.display_name + '</b><br>';\r\n      if (realTimeRecord.relativePosition) {\r\n        popup = popup + '<hr><center><span class=\"leaflet-pelias-layer-icon-container\"><div class=\"leaflet-pelias-layer-icon leaflet-pelias-layer-icon-point\"></div></span><strong>' + realTimeRecord.relativePosition + '</strong></center>';\r\n      }\r\n      realTimeRecord.geocoding = this.getGeocoding(adress.address);\r\n      realTimeRecord.geocodingDetails = adress.display_name;\r\n      this.updateSpecificGroups(realTimeRecord);\r\n      let displaycurrentPath = false;\r\n      if (this.currentPathClickedDeviceIds != null && this.currentPathClickedDeviceIds.indexOf(realTimeRecord.idRealTimeRecord)!=-1) {\r\n        displaycurrentPath = true;\r\n        this.pathDrawn = true;\r\n      }\r\n      if(realTimeRecord.idRealTimeRecord == this.selectedDevice){\r\n        this.mapService.removeAllRtMarkers();\r\n        this.mapService.updateRtMarkertest(realTimeRecord.coordinate,popup,icon,realTimeRecord.idRealTimeRecord, displaycurrentPath );\r\n        if(this.pathDrawn == false && realTimeRecord.speed > 0){\r\n          this.displayCurrentPath(realTimeRecord.idRealTimeRecord);\r\n        }\r\n      }\r\n    },(err) => {\r\n      let displaycurrentPath = false;\r\n      if ( this.currentPathClickedDeviceIds != null && this.currentPathClickedDeviceIds.indexOf(realTimeRecord.idRealTimeRecord)!=-1) {\r\n        displaycurrentPath = true;\r\n      }\r\n      if(realTimeRecord.idRealTimeRecord == this.selectedDevice){\r\n        marker.bindPopup(popup);\r\n        this.mapService.updateRtMarkertest(realTimeRecord.coordinate,popup,icon,realTimeRecord.idRealTimeRecord, displaycurrentPath );\r\n      }\r\n    });\r\n  }\r\n  \r\n  //\r\n  PipeLngLat(value: any) {\r\n    return this.pipe.transform(value, '2.2-6');\r\n  }\r\n \r\n //update du groupe\r\n  updateSpecificGroups(realTimeRecord: RealTimeRecord) {\r\n    if (this.groups)\r\n      this.groups.forEach(group => {\r\n        if (group)\r\n          group.vehicules.forEach(vehicule => {\r\n            if (vehicule.idDevice == realTimeRecord.idRealTimeRecord)\r\n              vehicule.realTimeRecord = realTimeRecord;\r\n          })\r\n      })\r\n  }\r\n\r\n  //alert lancement Moteur\r\n  AlertLancementMoteur(deviceId) {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Attention',\r\n      message: 'Êtes-vous sûr ?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            \r\n          }\r\n        },\r\n        {\r\n          text: 'Start',\r\n          handler: () => {\r\n          this.startEngine(deviceId);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  //start moteur\r\n  startEngine(deviceId){\r\n        this.realTimeService.startEngine(deviceId).subscribe(cmdSended => {\r\n          alert(\"commande Lancement moteur envoyé !\");\r\n      });\r\n      \r\n  \r\n  }\r\n\r\n  //alert arret moteur\r\n  AlertArretMoteur(deviceId) {\r\n    let alert = this.alertCtrl.create({\r\n      title: 'Attention',\r\n      message: 'Êtes-vous sûr ?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n            \r\n          }\r\n        },\r\n        {\r\n          text: 'Arrêt',\r\n          handler: () => {\r\n          this.stopEngine(deviceId);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  //stop moteur\r\n  stopEngine(deviceId){\r\n      this.realTimeService.stopEngine(deviceId).subscribe(cmdSended => {\r\n          alert(\"commande Arrêt moteur envoyé !\");\r\n      });\r\n  }\r\n\r\n  //open result \"historique des trajets\"\r\n  openResultsModal() {\r\n    this.mapService.removePolylinesFromMap();\r\n    this.mapService.removeMarkersFromMap();\r\n    let pathsListModal = this.modalCtrl.create(PathsList, { paths: this.paths });\r\n    if(this.paths==null){\r\n      let alert = this.alertCtrl.create({\r\n        title: 'Historique',\r\n        subTitle: 'Aucune informations',\r\n        buttons: ['Ok']\r\n      });\r\n      alert.present();\r\n    }else{\r\n      pathsListModal.present();\r\n      pathsListModal.onDidDismiss(pathClicked => {\r\n        if (pathClicked != null)\r\n        this.drawPath(pathClicked);\r\n        this.resultopened=true;\r\n        this.openStopResult=false;\r\n        this.openMileageResult=false;\r\n      });\r\n    }\r\n  }\r\n\r\n  // desiner le trajet\r\n  drawPath(path: any) {\r\n    this.mapService.removePolylinesFromMap();\r\n    this.mapService.removeMarkersFromMap();\r\n    this.historicalService.getPathDetails(path.deviceId, {\r\n      startDate: path.beginPathTime,\r\n      endDate: path.endPathTime\r\n    }).subscribe(points => {\r\n      let stopMarkers: Marker[] = [];\r\n      points.stops.forEach(stop => {\r\n        let popup = \"<img src='\" + imagesDir + \"stop_smal.png\" + \"'/> Durée d'arrêt : \" + stop.stopDurationStr;\r\n        let stopMarker = L.marker({lat : stop.stopLatitude, lng: stop.stopLongitude});\r\n        stopMarker.addTo(this.mapService.map);\r\n        stopMarker.on('click', () => {this.mapService.map.setView({lat : stop.stopLatitude, lng: stop.stopLongitude}, 14);});\r\n        this.dataManagementService.inverseGeoconding(stop.stopLatitude, stop.stopLongitude, 18).subscribe(adress => {\r\n          let truncatedDisplayName = adress.display_name;\r\n          let countCommas = 0;\r\n          for (var i = 0, len = adress.display_name.length; i < len; i++) {\r\n            if (adress.display_name[i] == ',') {\r\n              countCommas = countCommas + 1;\r\n            } else if (countCommas >= 5) {\r\n              truncatedDisplayName = adress.display_name.substring(0, i - 1);\r\n              break;\r\n            }\r\n          }\r\n          popup = popup + '<br><hr><b>' + truncatedDisplayName + '</b>';\r\n          stopMarker.bindPopup(popup);\r\n         \r\n        });\r\n        stopMarker.setIcon(new Icon({\r\n          iconUrl: imagesDir + \"stop_smal.png\",\r\n          iconAnchor: [-2, 30],\r\n          popupAnchor: [10, -25]\r\n        }));\r\n        this.mapService.addMarker(stopMarker);\r\n      });\r\n      let polyline = L.polyline(points.coordinates, { color: '#0031D9', weight: 3 });\r\n      points.coordinates.forEach((coordinate, i) => {\r\n        let marker = L.marker(coordinate);\r\n        if (i != 0 && i != points.coordinates.length - 1) {\r\n          marker.setIcon(new Icon({\r\n            iconUrl: imagesDir + \"green-point.png\",\r\n            iconAnchor: [2, 2]\r\n          }));\r\n          var pointDatePipe = new DatePipe(coordinate.date);\r\n          let popup = '<b>Heure:</b> ' + pointDatePipe.transform(coordinate.date, 'dd/MM/yyyy HH:mm:ss') + '<b><br>vitesse:</b> ' + coordinate.speed + ' Km/h';\r\n          marker.bindPopup(popup);\r\n          marker.on('click', () => {\r\n            this.mapService.map.setView(coordinate, 17);\r\n          });\r\n          this.mapService.addMarker(marker);\r\n        }\r\n      });\r\n      let startMarker = L.marker({ lat: path.beginPathLatitude, lng: path.beginPathLongitude });\r\n      let startTime: any = path.beginPathTime;\r\n      var startDatePipe = new DatePipe(startTime);\r\n      startMarker.bindPopup('<b> Lieu de début: </b>' + path.beginPathGeocoding +'<b></i><br>Temps de début du trajet : </b>' + startDatePipe.transform(startTime, 'dd/MM/yyyy HH:mm:ss'));\r\n      startMarker.setIcon(new Icon({\r\n        iconUrl: imagesDir + \"startMarker.png\",\r\n        iconAnchor: [-2, 30],\r\n        popupAnchor: [10, -25]\r\n      }));\r\n      this.mapService.addMarker(startMarker);\r\n      if (path.endPathLatitude != null && path.endPathLongitude != null && path.endPathTime != null) {\r\n        var endMarker = L.marker({ lat: path.endPathLatitude, lng: path.endPathLongitude });\r\n        let endTime: any = path.endPathTime;\r\n        var endDatePipe = new DatePipe(endTime);\r\n        endMarker.bindPopup('<b> Lieu de fin: </b>' + path.endPathGeocoding +'<br><b>Temps de fin du trajet : </b>' + endDatePipe.transform(endTime, 'dd/MM/yyyy HH:mm:ss')\r\n                    + '<br><b> Durée du trajet : </b>' + path.pathDurationStr + \"<br><b> Durée d'arrêt : </b>\" + path.nextStopDurationStr + \"<br><b> Vitesse maximum : </b>\"\r\n                    + path.maxSpeed + \" Km/h <br><b> Kilometrage parcouru : </b>\" + path.distanceDriven.toFixed(2) + ' Km'\r\n        );\r\n        endMarker.setIcon(new Icon({\r\n          iconUrl: imagesDir + \"endMarker.png\",\r\n          iconAnchor: [-2, 30],\r\n          popupAnchor: [10, -25]\r\n        }));\r\n        this.mapService.addMarker(endMarker);\r\n      }\r\n      this.mapService.addPolyline(polyline);\r\n      var middle = points.coordinates[Math.round((points.coordinates.length - 1) / 2)];\r\n      this.mapService.map.setView(middle, 12);\r\n    });\r\n    this.modalopen=true;\r\n  }\r\n\r\n  // trajet en courant temps reel\r\n  displayCurrentPath(deviceId: number) {\r\n    this.realTimeService.getCurrentPath(deviceId).subscribe(currentPath => {\r\n      if (currentPath != null) {\r\n        let polyline = L.polyline(currentPath.coordinates, {color: '#0031D9', weight: 3});\r\n          currentPath.coordinates.forEach((coordinate, i) => {\r\n            let marker = new Marker(coordinate);\r\n            if (i != 0 && i != currentPath.coordinates.length - 1) {\r\n              marker.setIcon(new Icon({\r\n                iconUrl: imagesDir + \"green-point.png\",\r\n                iconAnchor: [2, 2]\r\n              }));\r\n                  this.mapService.addMarker(marker);\r\n            }\r\n          });\r\n          let startMarker = L.marker({lat : currentPath.beginPathLatitude, lng: currentPath.beginPathLongitude});\r\n          startMarker.setIcon(new Icon({\r\n            iconUrl: imagesDir + \"startMarker.png\",\r\n            iconAnchor: [-2, 30],\r\n            popupAnchor: [10, -25]\r\n          }));\r\n          startMarker.on('click', () => {this.mapService.map.setView({lat : currentPath.beginPathLatitude, lng: currentPath.beginPathLongitude}, 14);});\r\n          this.mapService.addMarker(startMarker);\r\n          this.mapService.addPolyline(polyline);\r\n          this.pathDrawn = true;\r\n      }\r\n      this.previousPathdrawn = true;\r\n     \r\n    }, (err) => {\r\n      this.previousPathdrawn = false;\r\n    });\r\n    this.DeviceId= deviceId;\r\n  }\r\n\r\n  //\r\n  processGeocoding(geocoding: string): string{\r\n    if (geocoding != null){\r\n      let array = geocoding.split(',',3);\r\n      let smallerGeocoding = '';\r\n      array.forEach(word => {\r\n        smallerGeocoding = smallerGeocoding + ', ' + word;\r\n      });\r\n      smallerGeocoding = smallerGeocoding.slice(2,smallerGeocoding.length);      \r\n      return smallerGeocoding;\r\n    }else \r\n    return null; \r\n  } \r\n\r\n  //l'appel du chauffeur\r\n  calldriver(number:string){\r\n    if(number){\r\n    this.callNumber.callNumber(number, true)\r\n    .then(() => console.log('Launched dialer!'))\r\n    .catch(() => console.log('Error launching dialer'));\r\n    }else{\r\n      let alert = this.alertCtrl.create({\r\n        title: 'Error',\r\n        subTitle: 'Numéro introuvable',\r\n        buttons: ['Ok']\r\n      });\r\n      alert.present();\r\n    }\r\n  }\r\n\r\n  //draw all point interests\r\n  drawPointInterests() {\r\n    this.initMap();\r\n    this.mapService.removeMarkersPoiFromMap();\r\n    this.mapService.removePolygonsPoiFromMap();\r\n    this.mapService.removeCirclesFromMap(); \r\n    if (this.poisInMap) {\r\n      this.poisInMap = false;\r\n      return;\r\n    }else {\r\n      if (this.dataManagementService.pointInterests == null) {\r\n        this.dataManagementService.getAllPointInterests().subscribe(pointInterests => {\r\n          this.dataManagementService.pointInterests = pointInterests;\r\n          this.pointInterests = pointInterests;\r\n          pointInterests.forEach(pointInterest => {\r\n            this.drawPointInterest(pointInterest);  \r\n          });\r\n        });\r\n      }else {\r\n        this.dataManagementService.pointInterests.forEach(pointInterest => {\r\n          this.drawPointInterest(pointInterest);\r\n        });\r\n      }\r\n      this.poisInMap = true;\r\n    }\r\n  }\r\n\r\n  //draw une seule point d'interet\r\n  drawPointInterest(pointInterest: PointInterest) {\r\n    let popup = \"<b>Nom : </b> \" + pointInterest.name + \"<b>Adresse</b>\" + pointInterest.address+\"\";\r\n    let marker = null;\r\n    if (pointInterest.type == \"POLYGON\") {\r\n      let polygon = new Polygon(pointInterest.decode);\r\n      this.mapService.addPolygonPoi(polygon);\r\n    }\r\n    marker = L.marker(pointInterest.coordinate);\r\n    marker.setIcon(new Icon({\r\n      iconUrl: pointInterest.imageUri,\r\n      iconAnchor: [-2, 10],\r\n      popupAnchor: [10, -25]\r\n  }));\r\n  this.mapService.addMarkerPoi(marker);\r\n    marker.on(\"click\", () => {\r\n      this.mapService.map.setView(pointInterest.coordinate, 17);\r\n    });\r\n    marker.bindPopup('<b> Lieu de fin: </b>' + pointInterest.name +'<br><b>Temps de fin du trajet : </b>');     \r\n  }\r\n\r\n  // historique des trajet + historique des stops + historique de kilometrage\r\n  openFormModal(fab?: FabContainer) {\r\n    this.pathpoirealtime=false;\r\n    this.initMap();\r\n    if (fab !== undefined) {\r\n      fab.close();\r\n    }\r\n    this.pathDrawn=false;\r\n    this.previousPathdrawn=false;\r\n    this.mapService.removeAllRtMarkers();\r\n    let formModal = this.modalCtrl.create(HistoricalForm);\r\n    formModal.present();\r\n    formModal.onDidDismiss(form => {\r\n      if(form.endDate!=\"\" && form.startDate!=\"\" && form.list==\"trajet\"){\r\n        let firstDateTime =new Date(form.startDate);\r\n        let lastDateTime =new Date(form.endDate);\r\n        this.loader = this.loadingCtrl.create({\r\n          content: \"Veuillez attendre...\"\r\n        });\r\n        this.loader.present();\r\n        if(form.startDate==null && form.endDate==null){\r\n          this.loader.dismiss();\r\n          let alert = this.alertCtrl.create({\r\n            title: 'Error',\r\n            subTitle: 'Informations erronées',\r\n            buttons: ['Ok']\r\n          });\r\n          alert.present();\r\n        }\r\n        this.allPaths = this.historicalService.getAllPaths(this.selectedDevice, {\r\n          startDate: firstDateTime,\r\n          endDate: new Date(lastDateTime.getTime() + 3600000)\r\n        }).subscribe(paths => {\r\n          if (paths.length) {\r\n            this.paths = paths;\r\n            let lastLat = paths[0].beginPathLatitude;\r\n            let lastlng = paths[0].beginPathLongitude;\r\n            let i = 0;\r\n            this.paths.forEach(path => {\r\n              let startHour: any = path.beginPathTime;\r\n              let startTime: any = startHour + time_difference;\r\n              path.displayBeginPathTime = startTime;\r\n              if (path.endPathTime != null) {\r\n                let endHour: any = path.endPathTime;\r\n                let endTime: any = endHour + time_difference;\r\n                path.displayEndPathTime = endTime;\r\n              }\r\n              path.beginPathGeocodingDetails = this.dataManagementService.getRelativePosition(path.beginPathLatitude, path.beginPathLongitude);\r\n              path.beginPathGeocoding = path.beginPathGeocodingDetails;\r\n              if (path.beginPathGeocodingDetails == null) {\r\n                this.geocodingService.inverseGeoconding(path.beginPathLatitude, path.beginPathLongitude, 17).subscribe(adress => {\r\n                  path.beginPathGeocodingDetails = adress.display_name;\r\n                  if (adress.address.road != null && adress.address.neighbsourhood != null && adress.address.city != null) {\r\n                    path.beginPathGeocoding = adress.address.road + ' ' + adress.address.neighbourhood + '(' + adress.address.city + ')';\r\n                    path.beginPathGeocodingDetails = adress.address.road + ' ' + adress.address.neighbourhood + '(' + adress.address.city + ')';\r\n                  } else {\r\n                    let truncatedDisplayName = adress.display_name;\r\n                    let countCommas = 0;\r\n                    for (var i = 0, len = adress.display_name.length; i < len; i++) {\r\n                        if (adress.display_name[i] == ',') {\r\n                            countCommas = countCommas + 1;\r\n                        } else if (countCommas >= 5) {\r\n                            truncatedDisplayName = adress.display_name.substring(0, i - 1);\r\n                            path.beginPathGeocoding = truncatedDisplayName;\r\n                            path.beginPathGeocodingDetails = path.beginPathGeocoding;\r\n                            break;\r\n                        }\r\n                    }\r\n                  } \r\n                }, (err) => {\r\n                  path.beginPathGeocodingDetails = null;\r\n                  path.beginPathGeocoding = null;\r\n                });\r\n              } \r\n              path.endPathGeocodingDetails = this.dataManagementService.getRelativePosition(path.endPathLatitude, path.endPathLongitude);\r\n              path.endPathGeocoding = path.endPathGeocodingDetails;\r\n              if (path.endPathGeocodingDetails == null) {\r\n                this.geocodingService.inverseGeoconding(path.endPathLatitude, path.endPathLongitude, 17).subscribe(adress => {\r\n                  path.endPathGeocodingDetails = adress.display_name;\r\n                  if (adress.address.road != null && adress.address.neighbsourhood != null && adress.address.city != null) {\r\n                    path.endPathGeocoding = adress.address.road + ' ' + adress.address.neighbourhood + '(' + adress.address.city + ')';\r\n                    path.endPathGeocodingDetails = path.endPathGeocoding;\r\n                  } else {\r\n                    let truncatedDisplayName = adress.display_name;\r\n                    let countCommas = 0;\r\n                    for (var i = 0, len = adress.display_name.length; i < len; i++) {\r\n                      if (adress.display_name[i] == ',') {\r\n                        countCommas = countCommas + 1;\r\n                      } else if (countCommas >= 5) {\r\n                        truncatedDisplayName = adress.display_name.substring(0, i - 1);\r\n                        path.endPathGeocoding = truncatedDisplayName;\r\n                        path.endPathGeocodingDetails = path.endPathGeocoding;\r\n                        break;\r\n                      }\r\n                    }\r\n                  }\r\n                },(err) => { \r\n                  path.endPathGeocodingDetails = null;\r\n                  path.endPathGeocoding = null;             \r\n                });\r\n              }\r\n              i++;\r\n              lastLat = path.beginPathLatitude;\r\n              lastlng = path.beginPathLongitude;\r\n            });\r\n\r\n          }\r\n          this.loader.dismiss();\r\n          this.openResultsModal();      \r\n        }, (err) => {\r\n        });\r\n      }       \r\n      if(form.endDate!=\"\" && form.startDate!=\"\" && form.list==\"arret\"){\r\n        let firstDateTime =new Date(form.startDate);\r\n        let lastDateTime =new Date(form.endDate);\r\n        this.loader = this.loadingCtrl.create({\r\n          content: \"Veuillez attendre...\"\r\n        });\r\n        this.loader.present();\r\n        if(form.startDate==null && form.endDate==null) {\r\n          this.loader.dismiss();\r\n          let alert = this.alertCtrl.create({\r\n            title: 'Error',\r\n            subTitle: 'Informations erronées',\r\n            buttons: ['Ok']\r\n          });\r\n          alert.present();\r\n        }\r\n        this.allPaths = this.historicalService.getAllStops(this.selectedDevice, {\r\n          startDate: firstDateTime,\r\n          endDate: new Date(lastDateTime.getTime() + 3600000)\r\n          }).subscribe(stops => {\r\n            if (stops && stops.length) {                    \r\n              this.stops = stops;\r\n              this.stops.forEach(stop => {\r\n                stop.geocodingDetails = this.dataManagementService.getRelativePosition(stop.stopLatitude, stop.stopLongitude);\r\n                stop.geocoding = stop.geocodingDetails;\r\n                stop.beginStopTime = stop.beginStopTime + 2 * time_difference;\r\n                if (stop.geocodingDetails == null) {\r\n                  this.geocodingService.inverseGeoconding(stop.stopLatitude, stop.stopLongitude, 17).subscribe(adress => {\r\n                    stop.geocodingDetails = adress.display_name;\r\n                    if (adress.address.road != null && adress.address.neighbourhood != null && adress.address.city != null) {\r\n                      stop.geocoding = adress.address.road + ' ' + adress.address.neighbourhood + '(' + adress.address.city + ')';\r\n                      stop.geocodingDetails = adress.address.road + ' ' + adress.address.neighbourhood + '(' + adress.address.city + ')';\r\n                    } else {\r\n                      let truncatedDisplayName = adress.display_name;\r\n                      let countCommas = 0;\r\n                      for (var i = 0, len = adress.display_name.length; i < len; i++) {\r\n                        if (adress.display_name[i] == ',') {\r\n                            countCommas = countCommas + 1;\r\n                        } else if (countCommas >= 5) {\r\n                          truncatedDisplayName = adress.display_name.substring(0, i - 1);\r\n                          stop.geocoding = truncatedDisplayName;\r\n                          stop.geocodingDetails = stop.geocoding;\r\n                          break;\r\n                        }\r\n                      }\r\n                    }\r\n                  }, (err) => {\r\n                    stop.geocodingDetails = null;\r\n                    stop.geocoding = null;\r\n                  });\r\n                }\r\n              });\r\n            }\r\n            this.loader.dismiss();\r\n            this.openStopsResultsModal();\r\n            }, (err) => {\r\n          \r\n          });\r\n\r\n        }\r\n        if(form.endDate!=\"\" && form.startDate!=\"\" && form.list==\"kilo\"){ \r\n          let firstDateTime =new Date(form.startDate);\r\n          let startHour:any=new Date(form.startDate);\r\n          let lastDateTime =new Date(form.endDate);\r\n          this.loader = this.loadingCtrl.create({\r\n            content: \"Veuillez attendre...\"\r\n          });\r\n          this.loader.present();\r\n          if(form.startDate==null && form.endDate==null)\r\n          {\r\n            this.loader.dismiss();\r\n            let alert = this.alertCtrl.create({\r\n              title: 'Error',\r\n              subTitle: 'Informations erronées',\r\n              buttons: ['Ok']\r\n            });\r\n            alert.present();\r\n          }\r\n          this.AllPaths = this.historicalService.getAllMileages(this.selectedDevice, {\r\n            startDate: startHour - (24 * 60 * 60 * 1000),\r\n            endDate: new Date(lastDateTime.getTime() + 3600000)\r\n          }).subscribe(mileages => {\r\n            this.mileages = mileages;\r\n            this.mileages.forEach(mileage => {\r\n              let startHour: any = mileage.startHour;\r\n              mileage.startHour = startHour + (60 * 60 * 1000);\r\n            });\r\n            this.totalMileage = this.mileages[this.mileages.length - 1];\r\n            this.mileages.splice(this.mileages.length - 1);\r\n            this.loader.dismiss();\r\n            this.openMileageResultModal();\r\n          }, (err) => {   \r\n          });\r\n        }\r\n      });\r\n    }\r\n    \r\n    //draw les arrets\r\n    drawStop(stop: Stop) {\r\n      if (this.stopClicked == null || this.stopClicked.beginStopTime != stop.beginStopTime) {\r\n        this.stopClicked = new Stop();\r\n        this.stopClicked.beginStopTime = stop.beginStopTime;\r\n        this.stopClicked.endStopTime = stop.endStopTime;\r\n      }\r\n      this.mapService.removeMarkersFromMap();\r\n      let marker = L.marker({ lat: stop.stopLatitude, lng: stop.stopLongitude });\r\n      let date = new Date(stop.beginStopTime);\r\n      let beginStopTime: any = stop.beginStopTime;\r\n      var pointDatePipe = new DatePipe(beginStopTime);\r\n      let popup = \"<b>Date debut d'arrêt: </b>\" + pointDatePipe.transform(stop.beginStopTime, 'dd/MM/yyyy HH:mm:ss') + \"<br><b>Durée d'arrêt: </b>\" + stop.stopDurationStr + \"<br><hr><b>\" + stop.geocodingDetails + \"</b>\";\r\n      marker.setIcon(new Icon({\r\n          iconUrl: imagesDir + \"endMarker.png\",\r\n          iconAnchor: [-2, 30],\r\n          popupAnchor: [10, -25]\r\n      }));\r\n      marker.bindPopup(popup);\r\n      marker.on('click', () => {\r\n          this.mapService.map.setView({ lat: stop.stopLatitude, lng: stop.stopLongitude }, 17);\r\n      });\r\n      marker.on('add', () => {\r\n          marker.openPopup();\r\n      });\r\n      this.mapService.addMarker(marker);\r\n      this.mapService.map.setView({ lat: stop.stopLatitude, lng: stop.stopLongitude }, 15);\r\n    }\r\n    \r\n    // open modal \"historique de kilometrage\"\r\n    openMileageResultModal(){\r\n      this.mapService.removePolylinesFromMap();\r\n      this.mapService.removeMarkersFromMap(); \r\n      let mileageListModal = this.modalCtrl.create(MileageComponent, { mileages: this.mileages,totalMileage:this.totalMileage });\r\n      if(this.mileages==null){\r\n        let alert = this.alertCtrl.create({\r\n          title: 'Historique',\r\n          subTitle: 'Aucune informations',\r\n          buttons: ['Ok']\r\n        });\r\n        alert.present();\r\n      }else{\r\n        mileageListModal.present();\r\n        mileageListModal.onDidDismiss(mileageClicked => {\r\n          if (mileageClicked != null)\r\n          this.drawMileage(mileageClicked);\r\n        });\r\n      }\r\n      this.resultopened=false;\r\n      this.openStopResult=false;\r\n      this.openMileageResult=true;\r\n    }\r\n    \r\n    // draw Kilometrage\r\n    drawMileage(mileage: any) {\r\n      if (this.mileageClicked == null || this.mileageClicked.startHour != mileage.startHour) {\r\n        this.mileageClicked = new Mileage();\r\n        this.mileageClicked.startHour = mileage.startHour;\r\n        this.mileageClicked.endHour = mileage.endHour;\r\n      }\r\n      let startHour: any = mileage.startHour - (2 * 60 * 60 * 1000);\r\n      this.historicalService.getMileageDetails(this.selectedDevice, {\r\n        startDate: startHour,\r\n        endDate: mileage.endHour\r\n      }).subscribe(mileage => {\r\n        let points = mileage.points;\r\n        let stops = mileage.stops;\r\n        let polyline = L.polyline(points, { color: '#0031D9', weight: 3 });\r\n        points.forEach((coordinate, i) => {\r\n          let marker = L.marker(coordinate);\r\n          if (i != 0 && i != points.length - 1) {\r\n            marker.setIcon(new Icon({\r\n              iconUrl: imagesDir + \"green-point.png\",\r\n              iconAnchor: [2, 2]\r\n            }));\r\n            var pointDatePipe = new DatePipe(coordinate.date);\r\n            let popup = '<b>Heure:</b> ' + pointDatePipe.transform(coordinate.date, 'dd/MM/yyyy HH:mm:ss') + '<b><br>vitesse:</b> ' + coordinate.speed + ' Km/h';\r\n            marker.bindPopup(popup);\r\n            marker.on('click', () => {\r\n                this.mapService.map.setView(coordinate, 17);\r\n            });\r\n            this.mapService.addMarker(marker);\r\n          }\r\n        });\r\n        stops.forEach((stop, i) => {\r\n          let marker = L. marker({ lat: stop.stopLatitude, lng: stop.stopLongitude });\r\n          var pointDatePipe = new DatePipe(stop.beginStopTime);\r\n          let popup = \"<b>Date debut d'arrêt: </b>\" + pointDatePipe.transform(stop.beginStopTime, 'dd/MM/yyyy HH:mm:ss') + \"<br><b>Durée d'arrêt: </b>\" + stop.stopDurationStr;\r\n          marker.setIcon(new Icon({\r\n              iconUrl: imagesDir + \"stop_smal.png\",\r\n              iconAnchor: [-2, 30],\r\n              popupAnchor: [10, -25]\r\n          }));\r\n          marker.bindPopup(popup);\r\n          marker.on('click', () => {\r\n              this.mapService.map.setView({ lat: stop.stopLatitude, lng: stop.stopLongitude }, 17);\r\n          });\r\n          this.mapService.addMarker(marker);\r\n        });\r\n        this.mapService.addPolyline(polyline);\r\n        var middle = points[Math.round((points.length - 1) / 2)];\r\n        //map center offset(axis y)\r\n        // this.mapService.offsetMap(middle, 12, 0, -120);\r\n    });\r\n  }\r\n\r\n  // open resultat des arrets\r\n    openStopsResultsModal() {\r\n      this.mapService.removePolylinesFromMap();\r\n      this.mapService.removeMarkersFromMap();\r\n      let stopListModal = this.modalCtrl.create(StopList, { stops: this.stops });\r\n      if(this.stops==null){\r\n        let alert = this.alertCtrl.create({\r\n          title: 'Historique',\r\n          subTitle: 'Aucune informations',\r\n          buttons: ['Ok']\r\n        });\r\n        alert.present();\r\n      }else{\r\n        stopListModal.present();\r\n        stopListModal.onDidDismiss(stopClicked => {\r\n          if (stopClicked != null)\r\n          this.drawStop(stopClicked);\r\n        });\r\n      }\r\n      this.resultopened=false;\r\n      this.openStopResult=true;\r\n    }\r\n\r\n    //deconnexion confirm\r\n    presentConfirm() {\r\n      let actionSheet = this.actionSheetCtrl.create({\r\n        title: 'Souhaitez-vous vraiment vous déconnecter?',\r\n        buttons: [\r\n           {\r\n            text: 'Annuler',\r\n            role: 'cancel',\r\n            handler: () => {\r\n              \r\n            }\r\n          },{\r\n            text: 'Déconnexion',\r\n            handler: () => {\r\n            this.logout();\r\n            }\r\n          }\r\n        ]\r\n      });\r\n      actionSheet.present();\r\n    }\r\n    \r\n  //deconnexion + redirection home\r\n  logout() : void {\r\n    localStorage.removeItem('currentuser');\r\n    this._app.getRootNav().setRoot(HomePage);       \r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/historical/historical.ts","\r\nimport {Driver} from \"./data-management\";\r\n\r\nexport class RealTimeRecord {\r\n    \r\n        idRealTimeRecord: number;\r\n        recordTime: Date;\r\n        coordinate: {lat: number,lng: number};\r\n        speed: number;\r\n        temperature: string;\r\n        validity: boolean;\r\n        ignition: boolean;\r\n        power: number;\r\n        mems_x: number;\r\n        mems_y: number;\r\n        mems_z: number;\r\n        sendFlag: number;\r\n        type:'AA'|'GPRMC';\r\n        satInView: number;\r\n        signal: string;\r\n        heading: number;\r\n        matricule: string;\r\n        mark: string;\r\n        realTimeRecordStatus: string;\r\n        geocoding: string;\r\n        geocodingDetails: string;\r\n        relativePosition: string;\r\n        rotationAngle: number;\r\n        icon : string;\r\n    \r\n        vehicule: Vehicule = null;\r\n    \r\n        constructor() {\r\n            this.geocoding = `Chargement..`;\r\n            this.geocodingDetails = 'Chargement..';\r\n            this.speed = 0;\r\n            this.recordTime = new Date();\r\n            this.coordinate = {lat: 0, lng: 0};\r\n            this.realTimeRecordStatus = '';\r\n            this.rotationAngle= 0;\r\n        }\r\n    \r\n    }\r\n    \r\n    export class Group {\r\n        nom: string;\r\n        isOpen: boolean;\r\n        vehicules: Vehicule[];\r\n         icon: string;\r\n    }\r\n    \r\n    export class Vehicule {\r\n        idDevice: number;\r\n        matricule: string;\r\n        mark: string;\r\n        recordTime: Date;\r\n        coordinate: {lat: number,lng: number};\r\n        geocoding: string;\r\n        geocodingDetails: string;\r\n        speed: number;\r\n        driverName: string;\r\n        driver: Driver;\r\n    \r\n        realTimeRecord: RealTimeRecord;\r\n    \r\n        constructor() {\r\n            this.realTimeRecord = new RealTimeRecord();\r\n        }\r\n    }\r\n    export class User {\r\n        \r\n            id: number;\r\n            displayName: string;\r\n            username: string;\r\n            email: string;\r\n            enabled: boolean;\r\n            token: string;\r\n            isRoot: boolean;\r\n            password: string;\r\n        \r\n            authorities: Authority[];\r\n            groups:Group[];\r\n        \r\n            constructor() {\r\n                this.username = '';\r\n                this.email = '';\r\n                this.authorities = [];\r\n                this.groups = [];\r\n                this.enabled = true;\r\n                this.isRoot = false;\r\n            }\r\n        }\r\n        \r\n        export class Authority {\r\n            id: string;\r\n            name: 'ROLE_ROOT'|'ROLE_RT'|'ROLE_PATH'|'ROLE_PATH'|'ROLE_DM'|'ROLE_PM'|'ROLE_AM'|'ROLE_RM'|'ROLE_OV'|'ROLE_ED';\r\n            label: string;\r\n        \r\n            constructor() {\r\n            }\r\n        }\r\n        export class Credentials {\r\n            username: string;\r\n            password: string;\r\n        \r\n            constructor() {\r\n                this.username = '';\r\n                this.password = '';\r\n            }\r\n        }\r\n        export class Stop {\r\n            \r\n                stopDurationStr: string;\r\n                deviceId: number;\r\n            \r\n                beginStopTime: number;\r\n                stopDuration: Date;\r\n            \r\n                stopLatitude: number;\r\n                stopLongitude: number;\r\n            \r\n                endStopTime: Date\r\n                inPath: boolean;\r\n            \r\n                geocoding: string;\r\n                geocodingDetails: string;\r\n            \r\n                constructor() {\r\n            \r\n                }\r\n            \r\n            }\r\n            export class Mileage {\r\n                startHour: Date;\r\n                endHour: Date;\r\n                drivingDistance: number;\r\n                drivingDurationStr: string;\r\n            \r\n                constructor() {\r\n                    this.drivingDistance = 0;\r\n                    this.drivingDurationStr = '';\r\n                }\r\n            \r\n            }\r\n            \n\n\n// WEBPACK FOOTER //\n// ./src/objects/real-time.ts","import { Historical } from './../historical/historical';\nimport { Component } from '@angular/core';\nimport { NavController, ToastController, LoadingController, App } from 'ionic-angular';\nimport {SigningService} from '../../providers/login';\nimport {RealTimeService} from '../../providers/real-time.service';\nimport {HistoricalService} from '../../providers/historical.service';\nimport { DataManagementService } from '../../providers/data-management.service';\nimport { RealTimeRecord, Group, Vehicule } from \"../../objects/real-time\";\nimport { Subscription } from \"rxjs\";\nimport { Storage } from '@ionic/storage';\nimport {User} from '../../objects/real-time'\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  buttonColor: string = '#c42e36';\n  loader:any;\n  showing: boolean;\n  groups: Group[];\n  login: String = null;\n  mdp: String = null;\n  currentuser:User;\n  allGroups: Subscription;\n  newRealTimeRecords: RealTimeRecord[] = null;\n  oldRealTimeRecords: RealTimeRecord[] = null;\n  allRealTimeRecords: Subscription;\n  searchWord: string = '';\n  loginTest : String = null;\n  mdpTest : String = null;\n\n  constructor(public storage: Storage,private historicalService: HistoricalService,public app : App,public loadingCtrl: LoadingController,private realTimeService: RealTimeService,private dataManagementService: DataManagementService, public navCtrl: NavController,private signinService: SigningService,private toastController: ToastController) {\n    //recuperation current user\n   this.currentuser= JSON.parse(localStorage.getItem('currentuser'));\n  if(this.currentuser){\n    this.login = this.currentuser.username;\n    this.mdp=this.currentuser.password;\n    this.goToRt();\n  }else{\n    this.login=\"\";\n    this.mdp=\"\";\n  }\n  \n  }   \n //Signing method\n  Signing() {\n    \n    this.buttonColor = '#345465'; \n    this.signinService.login({\"username\":this.login,\"password\":this.mdp}).subscribe(\n      currentUser => {\n          currentUser.password = this.mdp;\n          localStorage.setItem('currentuser',JSON.stringify(currentUser));\n          this.goToRt();\n        }\n      , ()=> {\n        let toast = this.toastController.create({\n          message: 'Authentification Echouée!',\n          duration: 2000\n        });\n        this.buttonColor = '#c42e36'; \n        toast.present();\n      });\n     \n  }\n  //GO to Historical\n  goToRt(){\n   this.navCtrl.push(Historical).then(() => {\n      const index = this.navCtrl.getActive().index;\n      this.navCtrl.remove(0, index);\n    });\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 153;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 153\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 201;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 201\n// module chunks = 0","import { MapService } from './../../utils/map.service';\r\nimport { DataManagementService } from './../../providers/data-management.service';\r\nimport { PointInterest } from './../../objects/data-management';\r\nimport { Stop } from './../../objects/real-time';\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ModalController,LoadingController,ViewController } from 'ionic-angular';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Poi} from '../poi/poi'\r\n\r\n @Component({\r\n  selector: 'page-stop-list',\r\n  templateUrl: 'stop-list.html',\r\n})\r\nexport class StopList {\r\n    stops:any;\r\n    StopArray = [];\r\n\r\n\r\n  constructor(public navCtrl: NavController,private datamanagementService : DataManagementService,private mapService:MapService, public navParams: NavParams, public viewCtrl: ViewController,private modalCtrl:ModalController) {\r\n    this.stops = navParams.get('stops');\r\n    \r\n  }\r\n \r\n  drawStop(stop: any){\r\n    this.viewCtrl.dismiss(stop);\r\n  }\r\n  closeModal(){\r\n      \r\n    this.viewCtrl.dismiss(null);\r\n    \r\n  }\r\n  openPoiModal(stop:any){\r\n    \r\n    this.viewCtrl.dismiss(null);\r\n    let pointInterest= new PointInterest();\r\n    pointInterest.address=stop.geocodingDetails;\r\n    pointInterest.coordinate.lat=stop.stopLatitude;\r\n    pointInterest.coordinate.lng=stop.stopLongitude;\r\n    let PoiModal = this.modalCtrl.create(Poi,{pointInterest});\r\n    PoiModal.present();\r\n\r\n    PoiModal.onDidDismiss(form => {\r\n     this.datamanagementService.addPointInterest(form.pointinterest).subscribe(pointInterest => {\r\n\r\n          if (pointInterest.type == \"MARKER\") {\r\n              let circle = L.circle(pointInterest.coordinate, {\r\n                  color: 'red',\r\n                  fillColor: '#f03',\r\n                  fillOpacity: 0.1,\r\n                  radius: pointInterest.ray\r\n              });\r\n              this.mapService.addCircle(circle);\r\n              this.mapService.map.setView({ lat: stop.stopLatitude, lng: stop.stopLongitude }, 15);\r\n             \r\n\r\n              setTimeout(()=> {\r\n                  this.mapService.removeCirclesFromMap();\r\n              }, 3000);\r\n          }\r\n\r\n          this.datamanagementService.pointInterests.push(pointInterest);\r\n          this.drawStop(stop);\r\n          \r\n      }, (err) => {\r\n          \r\n      });\r\n        \r\n           \r\n    });\r\n\r\n  }\r\n   \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/stop-list/stop-list.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, ModalController, ViewController,LoadingController } from 'ionic-angular';\r\nimport { HistoricalService } from '../../providers/historical.service';\r\nimport { Subscription } from \"rxjs\";\r\n\r\n\r\n@Component({\r\n  selector: 'page-historical-form',\r\n  templateUrl: 'historical-form.html',\r\n})\r\nexport class HistoricalForm {\r\n\r\n  allGroups: Subscription;\r\n  selectedDeviceId: any;\r\n  groups: any[];\r\n  selectedGroup: any;\r\n  vehicules: any;\r\n  startDate1: Date=new Date() ;\r\n  endDate1: Date= new Date();\r\n  startDate:any;\r\n  selectedGroupId: any;\r\n  endDate:any;\r\n  loader: any;\r\n  list:string=\"trajet\";\r\n\r\n  constructor(private historicalService: HistoricalService, public viewCtrl: ViewController, public navCtrl: NavController, public navParams: NavParams, public loadingCtrl: LoadingController) {\r\n    \r\n    this.startDate1.setTime(this.startDate1.getTime() - 3 * 86400000);\r\n    this.startDate= this.startDate1.toISOString();\r\n    this.endDate=this.endDate1.toISOString();\r\n    \r\n  }\r\n\r\n  \r\n\r\n \r\n  getAllPaths() {\r\n\r\n    this.viewCtrl.dismiss({startDate: this.startDate, endDate: this.endDate ,list:this.list});\r\n   \r\n  }\r\n\r\n  closeModal(){\r\n   this.viewCtrl.dismiss({startDate:\"\",endDate:\"\",list:\"\"});\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/historical-form/historical-form.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, ModalController,LoadingController,ViewController } from 'ionic-angular';\r\nimport {DatePipe} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'page-paths-list',\r\n  templateUrl: 'paths-list.html',\r\n})\r\nexport class PathsList {\r\n\r\n  paths: any[];\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController) {\r\n    this.paths = navParams.get('paths');\r\n  }\r\n\r\n \r\n\r\n  drawPath(path: any){\r\n    this.viewCtrl.dismiss(path);\r\n  }\r\n\r\n  closeModal(){\r\n    this.viewCtrl.dismiss(null);\r\n    \r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/paths-list/paths-list.ts","import {Headers} from '@angular/http';\n\nexport const contentHeaders = new Headers();\ncontentHeaders.append('Accept', 'application/json');\ncontentHeaders.append('Content-Type', 'application/json');\n\nexport function createAuthorizationHeader(headers: Headers) {\n    headers.append('Authorization', localStorage.getItem('id_token'));\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/headers.ts","import { Credentials } from './../objects/real-time';\nimport { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { dns } from \"./global.config\";\nimport { contentHeaders, createAuthorizationHeader } from \"../utils/headers\";\nimport {User} from '../objects/real-time'\n@Injectable()\nexport class SigningService {\n\n  \n\n  constructor(public http: Http) {\n   \n  }\n\n  login(credentials: any) {\n    return this.http.post(dns + 'signin', credentials, { headers: contentHeaders }).map(res => res.json());\n  }\n\n  logout() {\n    let headers = new Headers({ 'Accept': 'application/json' });\n    createAuthorizationHeader(headers);\n    return this.http.post(dns + 'signout', {}, { headers: headers }).map(res => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/login.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ToastController,ModalController,ViewController ,AlertController } from 'ionic-angular';\nimport { RealTimeService } from '../../providers/real-time.service';\nimport { Subscription } from \"rxjs\";\n\n\n @Component({\n  selector: 'page-groups-page',\n  templateUrl: 'groups-page.html',\n})\nexport class GroupsPage {\n  allGroups: Subscription;\n  groups: any[];\n  selectedDevice: number;\n  searchWord : string;\n  iconCall:boolean=false;\n\n  constructor(private alertCtrl: AlertController,public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController, public realTimeService: RealTimeService) {\n    this.groups = navParams.get('groups');\n    //this.groups = this.processGroups(this.groups);\n  }\n\n /* processGroups(groups: any){\n    groups.forEach(group => {\n      \n    });\n    return groups;\n  }*/\n\n  closeModal(){\n    this.viewCtrl.dismiss(this.selectedDevice);\n    \n  }\n\n  ionViewDidLoad() {\n  }\n\n  searchGroup(){\n this.allGroups = this.realTimeService.getAllGroups(this.searchWord).subscribe(groupes => {\n      this.groups = groupes;\n    });\n  }\n\n  goToRealTimeRecord(deviceId: number){\n    this.selectedDevice = deviceId;\n   \n    this.viewCtrl.dismiss(this.selectedDevice);\n   \n  }\n\n  AlertLancementMoteur(deviceId) {\n    let alert = this.alertCtrl.create({\n      title: 'Attention',\n      message: 'Êtes-vous sûr ?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            \n          }\n        },\n        {\n          text: 'Start',\n          handler: () => {\n          this.startEngine(deviceId);\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n  startEngine(deviceId){\n        this.realTimeService.startEngine(deviceId).subscribe(cmdSended => {\n          alert(\"commande Lancement moteur envoyé !\");\n      });\n      \n  \n  }\n  AlertArretMoteur(deviceId) {\n    let alert = this.alertCtrl.create({\n      title: 'Attention',\n      message: 'Êtes-vous sûr ?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            \n          }\n        },\n        {\n          text: 'Start',\n          handler: () => {\n          this.stopEngine(deviceId);\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n  stopEngine(deviceId){\n      this.realTimeService.stopEngine(deviceId).subscribe(cmdSended => {\n          alert(\"commande Arrêt moteur envoyé !\");\n      });\n  \n  }\n\n  displayTodaysMileage(){\n    \n  }\n\n  displayCurrentPath(){\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/groups-page/groups-page.ts","import { MapService } from './../../utils/map.service';\r\nimport { DataManagementService } from './../../providers/data-management.service';\r\nimport { Component } from '@angular/core';\r\nimport { NavController, NavParams, ModalController,LoadingController,ViewController } from 'ionic-angular';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Mileage} from '../../objects/real-time'\r\n\r\n @Component({\r\n  selector: 'page-mileage-list',\r\n  templateUrl: 'mileage.html',\r\n})\r\nexport class MileageComponent {\r\n    mileages:Mileage;\r\n    MileageArray = [];\r\n    totalMileage: Mileage;\r\n    \r\n    constructor(public navCtrl: NavController,private datamanagementService : DataManagementService,private mapService:MapService, public navParams: NavParams, public viewCtrl: ViewController,private modalCtrl:ModalController) {\r\n        this.mileages = navParams.get('mileages');\r\n        this.totalMileage = navParams.get('totalMileage');\r\n        \r\n    \r\n      }\r\n      addMileageToArray(mileage: any, event) {\r\n        if (!event.ctrlKey) {\r\n            this.MileageArray = [];\r\n            this.mapService.removePolylinesFromMap();\r\n            this.mapService.removeMarkersFromMap();\r\n        }\r\n\r\n        this.MileageArray.push(mileage);\r\n        this.viewCtrl.dismiss(mileage);\r\n    }\r\n\r\n    closeModal(){\r\n        \r\n      this.viewCtrl.dismiss(null);\r\n      \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mileage/mileage.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { MileageComponentModule } from './../pages/mileage/mileage.module';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { CallNumber } from '@ionic-native/call-number';\r\nimport { Poi } from '../pages/poi/poi';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport {DecimalPipe} from '@angular/common';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { SigningService } from '../providers/login';\r\nimport { Historical } from '../pages/historical/historical';\r\nimport { GroupsPage } from '../pages/groups-page/groups-page';\r\nimport { HistoricalForm } from '../pages/historical-form/historical-form';\r\nimport { PathsList } from '../pages/paths-list/paths-list';\r\nimport { GeocodingService } from '../utils/geocoding.service';\r\nimport { MapService } from '../utils/map.service';\r\nimport {RealTimeService} from '../providers/real-time.service';\r\nimport {HistoricalService} from '../providers/historical.service';\r\nimport { DataManagementService } from '../providers/data-management.service';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport {StopList} from '../pages/stop-list/stop-list'\r\nimport { MileageComponent } from '../pages/mileage/mileage';\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage,\r\n    Poi,\r\n    Historical,\r\n    GroupsPage,\r\n    HistoricalForm,\r\n    PathsList,\r\n    StopList,\r\n    MileageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    IonicStorageModule.forRoot(),\r\n    IonicModule.forRoot(MyApp, {\r\n      swipeBackEnabled: 'false' \r\n     },\r\n   \r\n    \r\n    )],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage,\r\n    Historical,\r\n    GroupsPage,\r\n    HistoricalForm,\r\n    PathsList,\r\n    Poi,\r\n    StopList,\r\n    MileageComponent\r\n    \r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    SigningService,\r\n    GeocodingService,\r\n    MapService,\r\n    RealTimeService,\r\n    DataManagementService,\r\n    Geolocation,\r\n    HistoricalService,\r\n    DecimalPipe,\r\n    CallNumber,\r\n    IonicStorageModule,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Historical } from './../pages/historical/historical';\nimport { Component } from '@angular/core';\nimport { Platform,ToastController } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { HomePage } from '../pages/home/home';\nimport { Storage } from '@ionic/storage';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  \n  rootPage;\n\n  constructor(platform: Platform, statusBar: StatusBar,private storage:Storage, splashScreen: SplashScreen,public toastCtrl:ToastController) {\n    platform.ready().then(() => {\n      platform.registerBackButtonAction(()=>{});\n     \n      this.checkPreviousAuthorization();\n     \n      splashScreen.hide();\n      statusBar.show(); \n      statusBar.styleDefault();\n      \n    });\n    \n  }\n\n  checkPreviousAuthorization(): void { \n    if((window.localStorage.getItem('username') === \"undefined\" || window.localStorage.getItem('username') === null) && \n       (window.localStorage.getItem('password') === \"undefined\" || window.localStorage.getItem('password') === null)) {\n      this.rootPage = HomePage;\n    } else {\n      this.rootPage = Historical;\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","\n//export var dns: string = \"http://79.137.75.178:8080/ws_rimtrack_all_dev/\";\n//export var dns: string = \"http://localhost:8080/rimtrack-all-v2/\";\nexport var dns: string = \"http://37.187.171.84:8080/ws_rimtrack_all/\";\nexport var imagesDir: string = \"http://37.187.171.84/images/\";\nexport var nominatim_dns:string = \"http://37.187.171.84/nominatim\";\nexport var time_difference:number = -3600000;\n\n\n// WEBPACK FOOTER //\n// ./src/providers/global.config.ts","import { Vehicule } from './../objects/real-time';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\nimport {Http, Headers} from '@angular/http';\nimport { dns,nominatim_dns } from \"./global.config\";\nimport {PointInterest, Driver} from \"../objects/data-management\";\nimport {Group} from '../objects/real-time'\nimport {User} from '../objects/real-time'\n@Injectable()\nexport class DataManagementService {\n\n    pointInterests: PointInterest[] = null;\n    currentuser:User;\n    groups: Group[] = null;\n\n    selectedGroup:Group = null;\n    selectedVehiculeId:number = null;\n\n    constructor(private _http: Http) {\n        this.currentuser= JSON.parse(localStorage.getItem('currentuser'));\n    }\n\n    inverseGeoconding(latitude: number, longitude: number, zoom: number): Observable<any> {\n        return this._http.get(nominatim_dns + '/reverse.php?format=json&lat=' + latitude + '&lon=' + longitude + '&zoom=' + zoom + '&accept-language=fr&addressdetails=1').map(res => res.json());\n    }\n\n    getAllPointInterests(): Observable<PointInterest[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.currentuser.token);\n        return this._http.get(dns + 'pointInterests', {headers: headers}).map(res => res.json());\n    }\n\n    addPointInterest(pointInterest: PointInterest): Observable<PointInterest> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.currentuser.token);\n        return this._http.post(dns + 'pointInterests', pointInterest, {headers: headers}).map(res => res.json());\n    }\n\n    getAllGroups(): Observable<Group[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.currentuser.token);\n        return this._http.get(dns + 'groupes/minify', {headers: headers}).map(res => res.json());\n    }\n\n    // must exe only if pointInterests not NULL !!!\n    getRelativePosition(lat: number, lng: number): string {\n        let relativePosition = null;\n        this.pointInterests.forEach(pointInterest => {\n            let distance = this.distance(lat, lng, pointInterest.coordinate.lat, pointInterest.coordinate.lng);\n            if (distance < pointInterest.ray / 1000) {\n                relativePosition = pointInterest.name;\n            }\n            /*if (distance > pointInterest.ray / 1000 && distance < 0.1) {\n                relativePosition = Math.round(distance * 1000) + \" metre de \" + pointInterest.name;\n            }*/\n            if (distance > pointInterest.ray / 1000 && distance <0.2) {\n                let distanceStr = distance.toString().substr(0, 4);\n                relativePosition = \"à \" + distanceStr + \" Km de \" + pointInterest.name;\n            }\n        });\n        return relativePosition;\n    }\n\n    distance(lat1, lon1, lat2, lon2) {\n        var p = 0.017453292519943295;    // Math.PI / 180\n        var c = Math.cos;\n        var a = 0.5 - c((lat2 - lat1) * p) / 2 +\n            c(lat1 * p) * c(lat2 * p) *\n            (1 - c((lon2 - lon1) * p)) / 2;\n        var distance = 12742 * Math.asin(Math.sqrt(a));\n        return distance;\n    }\n\n    getDriverName(driver: Driver) {\n        if (driver) {\n            if (driver.firstName && driver.lastName) {\n                return driver.firstName + ' ' + driver.lastName;\n            }\n            else if (driver.firstName) {\n                return driver.firstName;\n            }\n            else if (driver.lastName) {\n                return driver.lastName;\n            }\n            else return \"anonyme\";\n        }\n        else return \"pas de chauffeur\";\n    }\n    getDriverPhonenumber(driver:Driver){\n        if(driver){\n            if(driver.telephone)\n            return driver.telephone;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/data-management.service.ts","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { Map } from 'leaflet';\r\nimport 'leaflet';\r\nimport Marker = L.Marker;\r\nimport Icon = L.Icon;\r\nimport LatLngExpression = L.LatLngExpression;\r\nimport FeatureGroup = L.FeatureGroup;\r\nimport Polygon = L.Polygon;\r\nimport Polyline = L.Polyline;\r\nimport CircleMarker = L.CircleMarker;\r\nimport Circle = L.Circle;\r\nimport { RtMarker, newRtMarker } from \"./marker\";\r\nimport { imagesDir } from \"../providers/global.config\";\r\n\r\n@Injectable()\r\nexport class MapService {\r\n\r\n    public map: Map;\r\n    public baseMaps: any;\r\n\r\n    public drawnItems: FeatureGroup;\r\n\r\n    public mapLoaded: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    public markerWasAdded: EventEmitter<any> = new EventEmitter<any>();\r\n    public markerWasEdited: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    public polygons: Polygon[] = [];\r\n    public markers: Marker[] = [];\r\n    public polylines: Polyline[] = [];\r\n    public circles: Circle[] = [];\r\n    public newRtMarkers: newRtMarker[] = [];\r\n    public rtMarkers: RtMarker[] = [];\r\n\r\n    public markersPoi: Marker[] = [];\r\n    public polygonsPoi: Polygon[] = [];\r\n\r\n    constructor() {\r\n        this.baseMaps = {\r\n            \r\n            RimTelecom: L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\r\n                maxZoom: 20,\r\n                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\r\n                }),\r\n   \r\n            googlestreet: L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {\r\n                id:'Google Streets',\r\n                maxZoom: 20,\r\n                maxNativeZoom:17,\r\n                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\r\n            }),\r\n            googlehybride: L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\r\n                maxZoom: 20,\r\n                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\r\n            }),\r\n            googleSat: L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {\r\n                maxZoom: 20,\r\n                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\r\n            }),\r\n            'Google Terrain': L.tileLayer('http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}', {\r\n                maxZoom: 20,\r\n                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\r\n            }),\r\n            \r\n            OpenStreetMap: L.tileLayer(\"http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\", {\r\n                maxZoom: 20,\r\n                maxNativeZoom: 17,\r\n                attribution: '&copy; <a href=\"rimtelecom.ma\">Rim telecom</a>, Tiles courtesy of <a href=\"http://hot.openstreetmap.org/\" target=\"_blank\">Humanitarian OpenStreetMap Team</a>'\r\n            }),\r\n            Esri: L.tileLayer(\"http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\", {\r\n                attribution: 'Rimtelecom'\r\n            }),\r\n            CartoDB: L.tileLayer(\"http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\", {\r\n                maxZoom: 20,\r\n                maxNativeZoom: 17,\r\n                attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"http://cartodb.com/attributions\">CartoDB</a>'\r\n            }),\r\n            Esri_WorldImagery: L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\r\n                maxZoom: 20,\r\n                maxNativeZoom: 17,\r\n                attribution: 'Rimtelecom'\r\n            })\r\n        };\r\n    }\r\n\r\n    addRtMarker(rtMarker: RtMarker) {\r\n        rtMarker.value.setIcon(rtMarker.icon);\r\n        this.rtMarkers.push(rtMarker);\r\n        rtMarker.value.addTo(this.map);\r\n    }\r\n\r\n    updateRtMarkertest(coordinate: any,popup: any,icon: any,id: any,isCurrentPathClicked: boolean) {\r\n        //tester si la liste est vide\r\n        //si oui \r\n        \r\n        if(this.newRtMarkers == null || this.newRtMarkers.length == 0){\r\n        let marker = L.marker(L.latLng(coordinate.lat, coordinate.lng));\r\n        marker.addTo(this.map);\r\n        marker.bindPopup(popup);\r\n        marker.setIcon(icon);\r\n        marker.on('click', () => {this.map.setView(coordinate, 14);});\r\n        this.newRtMarkers.push({id: id ,marker: marker});\r\n    }  else {\r\n                this.newRtMarkers.map(rt => {\r\n            if (rt.id == id) {\r\n               //rt.marker.remove();\r\n            this.newRtMarkers.splice(this.newRtMarkers.indexOf(rt),1);\r\n            rt.marker.setLatLng(coordinate);\r\n            rt.marker.setIcon(icon);\r\n            rt.marker.getPopup().setContent(popup);\r\n            if(isCurrentPathClicked == true)\r\n                {let marker = L.marker(L.latLng(coordinate.lat, coordinate.lng));\r\n                    marker.setIcon(new Icon({\r\n                        iconUrl: imagesDir + \"green-point.png\",\r\n                        iconAnchor: [2, 2]\r\n                    }));\r\n                    this.addMarker(marker);\r\n                    let points = [];\r\n                    points.push(rt.marker.getLatLng())\r\n                    points.push(coordinate.value.getLatLng());\r\n                    let polyline = L.polyline(points, { color: '#0031D9', weight: 3 });\r\n                    this.addPolyline(polyline);\r\n                }\r\n            }\r\n            });\r\n    }\r\n\r\n    }\r\n\r\n    updateRtMarker(rtMarker: RtMarker, isCurrentPathClicked: boolean) {\r\n        let ok: boolean = false;\r\n        this.rtMarkers.map(rt => {\r\n            if (rt.id == rtMarker.id) {\r\n                if (isCurrentPathClicked == true) {\r\n                    let marker = new Marker(rt.value.getLatLng());\r\n                    marker.setIcon(new Icon({\r\n                        iconUrl: imagesDir + \"green-point.png\",\r\n                        iconAnchor: [2, 2]\r\n                    }));\r\n                    /*marker.on('click', () => {\r\n                        this.map.setView(rt.value.getLatLng(), 17);\r\n                    });*/\r\n                    this.addMarker(marker);\r\n                    let points = [];\r\n                    points.push(rt.value.getLatLng())\r\n                    points.push(rtMarker.value.getLatLng());\r\n                    let polyline = L.polyline(points, { color: '#0031D9', weight: 3 });\r\n                    this.addPolyline(polyline);\r\n                }\r\n                rt.value.setLatLng(rtMarker.value.getLatLng());\r\n                //rt.value.getPopup().setContent(rtMarker.value.getPopup().getContent());\r\n                /*rt.value.on('click', () => {\r\n                    this.map.setView(rtMarker.value.getLatLng(), 16);\r\n                });*/\r\n                rt.value.options.rotationAngle = rtMarker.angle;\r\n                /*rt.value.setIcon(rtMarker.icon);*/\r\n                ok = true;\r\n            }\r\n        });\r\n        if (!ok) {\r\n            rtMarker.value.setIcon(rtMarker.icon);\r\n            this.rtMarkers.push(rtMarker);\r\n            rtMarker.value.addTo(this.map);\r\n        }\r\n    } \r\n\r\n    removeAllRtMarkers() {\r\n        this.newRtMarkers.forEach(m => {\r\n            this.map.removeLayer(m.marker);\r\n        });\r\n        this.newRtMarkers = [];\r\n    }\r\n\r\n    setView(coordinate: any) {\r\n        this.map.setView(coordinate, 15);\r\n    }\r\n\r\n    addCircle(circle: Circle) {\r\n        this.circles.push(circle);\r\n        circle.addTo(this.map);\r\n    }\r\n\r\n    removeCirclesFromMap() {\r\n        this.circles.forEach(m => {\r\n            this.map.removeLayer(m);\r\n        });\r\n        this.circles = [];\r\n    }\r\n\r\n    addMarker(marker: Marker) {\r\n        this.markers.push(marker);\r\n        marker.addTo(this.map);\r\n    }\r\n\r\n    addMarkerPoi(marker: Marker) {\r\n        this.markersPoi.push(marker);\r\n        marker.addTo(this.map);\r\n    }\r\n\r\n    removeMarkersPoiFromMap() {\r\n        this.markersPoi.forEach(m => {\r\n            this.map.removeLayer(m);\r\n        });\r\n        this.markersPoi = [];\r\n    }\r\n\r\n    removeMarker(index: number) {\r\n        this.map.removeLayer(this.markers[index]);\r\n        delete this.markers[index];\r\n    }\r\n\r\n    addMarkersToMap() {\r\n        this.markers.forEach(marker => {\r\n            marker.addTo(this.map);\r\n        })\r\n    }\r\n\r\n    removeMarkersFromMap() {\r\n        this.markers.forEach(m => {\r\n            this.map.removeLayer(m);\r\n        });\r\n        this.markers = [];\r\n    }\r\n\r\n    addPolyline(polyline: Polyline) {\r\n        this.polylines.push(polyline);\r\n        polyline.addTo(this.map);\r\n    }\r\n\r\n    removePolylinesFromMap() {\r\n        this.polylines.forEach(m => {\r\n            this.map.removeLayer(m);\r\n        });\r\n        this.polylines = [];\r\n    }\r\n\r\n    addPolygon(polygon: Polygon) {\r\n        this.polygons.push(polygon);\r\n        polygon.addTo(this.map);\r\n    }\r\n\r\n    addPolygonPoi(polygon: Polygon) {\r\n        this.polygonsPoi.push(polygon);\r\n        polygon.addTo(this.map);\r\n    }\r\n\r\n\r\n\r\n    removePolygon(index: number) {\r\n        //this.map.removeLayer(this.polygons[index]);\r\n        delete this.polygons[index];\r\n    }\r\n\r\n    addPolygonsToMap() {\r\n        this.polygons.forEach(Polygon => {\r\n            Polygon.addTo(this.map);\r\n        })\r\n    }\r\n\r\n    removePolygonsFromMap() {\r\n        this.polygons.forEach(m => {\r\n            this.map.removeLayer(m);\r\n        });\r\n        this.polygons = [];\r\n    }\r\n\r\n    removePolygonsPoiFromMap() {\r\n        this.polygonsPoi.forEach(m => {\r\n            this.map.removeLayer(m);\r\n        });\r\n        this.polygonsPoi = [];\r\n    }\r\n\r\n    resetMap() {\r\n        this.removeMarkersFromMap();\r\n        this.removePolygonsFromMap();\r\n        this.removePolylinesFromMap();\r\n    }\r\n\r\n    disableMouseEvent(elementId: string) {\r\n        let element = <HTMLElement>document.getElementById(elementId);\r\n        L.DomEvent.disableClickPropagation(element);\r\n        L.DomEvent.disableScrollPropagation(element);\r\n    };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/map.service.ts","import {Injectable} from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Http, Headers} from '@angular/http';\r\nimport {dns} from \"./global.config\";\r\nimport {User,Stop,Mileage} from \"../objects/real-time\";\r\n\r\n@Injectable()\r\nexport class HistoricalService {\r\n\r\n    currentuser:User;\r\n\r\n    constructor(private _http: Http) {\r\n        this.currentuser= JSON.parse(localStorage.getItem('currentuser'));\r\n    }\r\n    getMileageDetails(deviceId: number, dateInterval: any): Observable<any> {\r\n        let headers = new Headers({'Accept': 'application/json'});\r\n        headers.append('Authorization', this.currentuser.token);\r\n        return this._http.post(dns + 'mileage/details/' + deviceId, dateInterval, {headers: headers}).map(res => res.json());\r\n    }\r\n    getAllMileages(deviceId: number, dateInterval: any): Observable<Mileage[]> {\r\n        let headers = new Headers({'Accept': 'application/json'});\r\n        headers.append('Authorization', this.currentuser.token);\r\n        return this._http.post(dns + 'mileage/' + deviceId, dateInterval, {headers: headers}).map(res => res.json());\r\n    }\r\n    getAllGroups(): Observable<any[]> {\r\n        let headers = new Headers({'Accept': 'application/json'});\r\n        headers.append('Authorization', this.currentuser.token);\r\n        return this._http.get(dns + 'groupes/minify', {headers: headers}).map(res => res.json());\r\n    }\r\n\r\n    getAllPaths(deviceId: number, dateInterval: any): Observable<any[]> {\r\n        let headers = new Headers({'Accept': 'application/json'});\r\n        headers.append('Authorization', this.currentuser.token);\r\n        return this._http.post(dns + 'paths/' + deviceId, dateInterval, {headers: headers}).map(res => res.json());\r\n    }\r\n    getAllStops(deviceId: number, dateInterval: any): Observable<Stop[]> {\r\n        let headers = new Headers({'Accept': 'application/json'});\r\n        headers.append('Authorization', this.currentuser.token);\r\n        return this._http.post(dns + 'stops/' + deviceId, dateInterval, {headers:headers}).map(res => res.json());\r\n    }\r\n\r\n\r\n    getCurrentPath(deviceId: number): Observable<any> {\r\n        let headers = new Headers({'Accept': 'application/json'});\r\n        headers.append('Authorization', this.currentuser.token);\r\n        return this._http.post(dns + 'paths/currentPath/' + deviceId,null,  {headers: headers}).map(res => res.json());\r\n    }\r\n\r\n    getPathDetails(deviceId: number, dateInterval: any): Observable<any> {\r\n        let headers = new Headers({'Accept': 'application/json'});\r\n        headers.append('Authorization', this.currentuser.token);\r\n        return this._http.post(dns + 'paths/details/' + deviceId, dateInterval, {headers: headers}).map(res => res.json());\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/historical.service.ts","import { PointInterest } from './../objects/data-management';\nimport { Storage } from '@ionic/storage';\nimport { CallNumber } from '@ionic-native/call-number';\nimport {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {Observable} from 'rxjs/Observable';\nimport {Http, Headers} from '@angular/http';\nimport {dns} from \"./global.config\";\nimport {RealTimeRecord, Group} from \"../objects/real-time\";\nimport {createAuthorizationHeader} from \"../utils/headers\";\nimport {User} from '../objects/real-time'\n\n@Injectable()\nexport class RealTimeService {\n\n    currentuser:User;\n    \n    constructor(private _http: Http,private storage:Storage) {\n        this.currentuser= JSON.parse(localStorage.getItem('currentuser'));\n        \n    }\n\n    getRealTimeRecord(deviceId: number): Observable<RealTimeRecord> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.currentuser.token);\n        // ici il faut recuperer utilisateur courant !!!!\n        // il faut dabord lors de authen => tu gard utilisteur sur le storage pour que tu puise le recuperer ici\n        return this._http.get(dns + 'realTimeRecords/' + deviceId, {headers: headers}).map(res => res.json());\n\n    }\n\n    getAllPois(): Observable<PointInterest[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.currentuser.token);\n        return this._http.get(dns + 'pointInterests/dtos', {headers: headers}).map(res => res.json());\n    }\n\n    getAllRealTimeRecords(): Observable<RealTimeRecord[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        let parms = \"\";\n        headers.append('Authorization', this.currentuser.token);\n       \n        if (!this.currentuser.isRoot) {\n            parms = '?id=' + this.currentuser.id;\n        }\n        return this._http.get(dns + 'realTimeRecords'+ parms, {headers: headers}).map(res => res.json());\n    }\n\n    getAllGroups(keyword: string): Observable<Group[]> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.currentuser.token);\n        let parms = \"\";\n        if (!this.currentuser.isRoot) {\n            parms = '&id=' + this.currentuser.id;\n        }\n        return this._http.get(dns + 'groupes/details?keyword=' + keyword + parms, {headers: headers}).map(res => res.json());\n      \n        \n       \n    }\n\n    getCurrentPath(deviceId: number): Observable<any> {\n        let headers = new Headers({'Accept': 'application/json'});\n        headers.append('Authorization', this.currentuser.token);\n        return this._http.post(dns + 'paths/currentPath/' + deviceId,null,  {headers: headers}).map(res => res.json());\n    }\n\n    startEngine(idBoitier: number): Observable<Boolean> {\n        let headers = new Headers({'Accept': 'application/json'});\n        createAuthorizationHeader(headers)\n        return this._http.post(dns + 'engine/start/' + idBoitier, null, {headers: headers}).map(res => res.json());\n    }\n    stopEngine(idBoitier: number): Observable<Boolean> {\n        let headers = new Headers({'Accept': 'application/json'});\n        createAuthorizationHeader(headers)\n        return this._http.post(dns + 'engine/stop/' + idBoitier, null, {headers: headers}).map(res => res.json());\n    }\n    \n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/real-time.service.ts","import { GeocodingService } from './../../utils/geocoding.service';\r\nimport { DataManagementService } from './../../providers/data-management.service';\r\nimport { MapService } from './../../utils/map.service';\r\nimport { PointInterest } from './../../objects/data-management';\r\nimport { Component,Input, Output } from '@angular/core';\r\nimport { NavController, NavParams, ModalController,AlertController,LoadingController,ViewController,ToastController } from 'ionic-angular';\r\nimport Polygon = L.Polygon;\r\nimport Marker = L.Marker;\r\nimport Icon = L.Icon;\r\nimport {imagesDir} from \"../../providers/global.config\";\r\n\r\n @Component({\r\n    selector: 'app-poi',\r\n    templateUrl: 'poi.html'\r\n})\r\nexport class Poi{\r\n    mode: string = 'ADD';\r\n    \r\n       \r\n    \r\n    pointInterests: PointInterest[] = [];\r\n    \r\n    pointInterestsPoint: PointInterest[] = [];\r\n    pointInterestsPolygon: PointInterest[] = [];\r\n    images = [\r\n        {text: \"marker1\", uri: imagesDir + \"marker1.png\"},\r\n        {text: \"marker2\", uri: imagesDir + \"marker2.png\"},\r\n        {text: \"marker3\", uri: imagesDir + \"marker3.png\"},\r\n        {text: \"marker4\", uri: imagesDir + \"marker4.png\"},\r\n        {text: \"marker5\", uri: imagesDir + \"marker5.png\"},\r\n        {text: \"marker6\", uri: imagesDir + \"marker6.png\"},\r\n        {text: \"marker7\", uri: imagesDir + \"marker7.png\"},\r\n        {text: \"marker8\", uri: imagesDir + \"marker8.png\"},\r\n        {text: \"marker9\", uri: imagesDir + \"marker9.png\"},\r\n        {text: \"marker10\", uri: imagesDir + \"marker10.png\"},\r\n        {text: \"marker11\", uri: imagesDir + \"marker11.png\"},\r\n        {text: \"flag1\", uri: imagesDir + \"flag1.png\"},\r\n        {text: \"flag2\", uri: imagesDir + \"flag2.png\"},\r\n        {text: \"house1\", uri: imagesDir + \"house1.png\"},\r\n        {text: \"house2\", uri: imagesDir + \"house.png\"}\r\n    ];\r\n    pointinterest:PointInterest=new PointInterest();\r\n \r\n    selectedImage: { text: string, uri: string } = this.images[0];\r\n    addresspoi:string;\r\n    latpoi:number;\r\n    lngpoi:number;\r\n    imageuripoi:any;\r\n    constructor(public navParams: NavParams,private mapService: MapService,private alertCtrl: AlertController,public toastr: ToastController,private dataManagementService: DataManagementService, public viewCtrl: ViewController,private geocodingService: GeocodingService) {\r\n        this.pointinterest = navParams.get('pointInterest');\r\n    }\r\n   \r\n    \r\n\r\n    //GET list of Points and Polygons\r\n    \r\n    closeModal(){\r\n        this.pointinterest.name=null;\r\n        this.viewCtrl.dismiss({pointinterest:this.pointinterest});\r\n        \r\n      }\r\n \r\n    addpoi(){\r\n        if(this.pointinterest.name==null){\r\n            let alert = this.alertCtrl.create({\r\n                title: 'Alert',\r\n                subTitle: 'Ajouter un Nom',\r\n                buttons: ['Ok']\r\n              });\r\n              alert.present();\r\n        }else{\r\n       \r\n        this.pointinterest.type='MARKER';\r\n        this.pointinterest.imageUri=this.selectedImage.uri;\r\n        this.viewCtrl.dismiss({pointinterest:this.pointinterest });\r\n        }\r\n      }\r\n      \r\n           \r\n                      \r\n                    \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/poi/poi.ts","import {Injectable} from '@angular/core';\nimport {Http} from \"@angular/http\";\nimport {Subscription} from \"rxjs\";\nimport {Observable} from \"rxjs\";\nimport { dns,nominatim_dns } from \"../providers/global.config\";\n@Injectable()\nexport class GeocodingService {\n\n    geocodingSubscription: Subscription;\n    token: string;\n    \n    constructor(private _http: Http) {\n    }\n\n    distance(lat1, lon1, lat2, lon2) {\n        var p = 0.017453292519943295;    // Math.PI / 180\n        var c = Math.cos;\n        var a = 0.5 - c((lat2 - lat1) * p) / 2 +\n            c(lat1 * p) * c(lat2 * p) *\n            (1 - c((lon2 - lon1) * p)) / 2;\n        var distance = 12742 * Math.asin(Math.sqrt(a));\n        return distance;\n    }\n\n    inverseGeoconding(latitude: number, longitude: number, zoom: number): Observable<any> {\n        return this._http.get(nominatim_dns + '/reverse.php?format=json&lat=' + latitude + '&lon=' + longitude + '&zoom=' + zoom + '&accept-language=fr&addressdetails=1').map(res => res.json());\n    }\n\n    getMyIpAdress(): Observable<{ip: string}> {\n        return this._http.get('http://api.ipify.org/?format=json').map(res => res.json());\n    }\n\n    getMyLocation(ip: string) {\n        return this._http.get('freegeoip.net/json/' + ip).map(res => res.json());\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/geocoding.service.ts","export class PointInterest {\n    \n        idPointInterest: number;\n        name: string;\n        address: string;\n        ray: number;\n        zoomLevel: number;\n        imageUri: string;\n        coordinate: { lat: number, lng: number };\n        type: 'MARKER' | 'POLYGON' | 'LINE' | number;\n        decode: any[];\n        hash: string;\n    \n        constructor() {\n            this.ray = 100;\n            this.decode = [];\n            this.coordinate = { lat: 0, lng: 0 };\n        }\n    \n    }\n  \n    \n    \n    \n    \n    \n    \n \n    \n    \n   \n\n    export class Driver {\n        idDriver: number;\n        code: string;\n        firstName: string;\n        lastName: string;\n        telephone: string;\n        cin: string;\n        email: string;\n        constructor(){\n            \n        }\n    }\n\n\n// WEBPACK FOOTER //\n// ./src/objects/data-management.ts"],"sourceRoot":""}